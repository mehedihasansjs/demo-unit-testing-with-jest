{"file":"/Users/bs1082/Desktop/workspace/BS23/developer-meetup/informatiq-monthly/unit-testing-with-jest/demo-unit-testing-with-jest/src/app/app.component.spec.ts","mappings":"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","names":[],"sources":["/Users/bs1082/Desktop/workspace/BS23/developer-meetup/informatiq-monthly/unit-testing-with-jest/demo-unit-testing-with-jest/src/app/app.component.spec.ts"],"sourcesContent":["import { HttpClientTestingModule } from '@angular/common/http/testing';\nimport { TestBed } from '@angular/core/testing';\nimport { of } from 'rxjs';\nimport { AppComponent } from './app.component';\nimport { GithubService } from './services/github.service';\n\ndescribe('AppComponent', () => {\n  let mockGithubService: any;\n\n  beforeEach(async () => {\n    mockGithubService = {\n      getUser: jest.fn()\n    };\n\n    await TestBed.configureTestingModule({\n      imports: [ AppComponent ],\n      providers: [\n        {\n          provide: GithubService,\n          useValue: mockGithubService\n        }\n      ]\n    }).compileComponents();\n  });\n\n  it('should create the app', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app).toBeTruthy();\n  });\n\n  it('should have empty username', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app.username).toEqual('');\n  });\n\n  it('should have empty user', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app.user).toBeUndefined();\n  });\n\n  it('should have username: octcat', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    app.username = 'octcat';\n    expect(app.username).toEqual('octcat');\n  });\n\n  it('should have user.login: octcat', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    app.username = 'octcat';\n\n    jest.spyOn(mockGithubService, 'getUser').mockReturnValue(of({\n      id: 1,\n      login: 'octcat'\n    }));\n\n    // in this stage, getUser should not be called yet\n    expect(mockGithubService.getUser).toHaveBeenCalledTimes(0);\n\n    app.getUser();\n\n    // getUser should be called once with username: octcat\n    expect(mockGithubService.getUser).toHaveBeenCalledWith('octcat');\n    expect(mockGithubService.getUser).toHaveBeenCalledTimes(1);\n\n    // user should be defined and login should be octcat\n    expect(app.user).toBeDefined();\n    expect(app.user?.login).toEqual('octcat');\n  });\n\n});\n"],"version":3}